services:
  db:
    image: postgres:17-alpine
    container_name: zitadel-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: zitadel
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d zitadel"]
      interval: 5s
      timeout: 3s
      retries: 30
    volumes:
      - dbdata:/var/lib/postgresql/data
    restart: unless-stopped

  # Serves the ZITADEL API and proxies /ui/* to the login frontend
  zitadel:
    image: ghcr.io/zitadel/zitadel:latest
    container_name: zitadel
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Database connection (required)
      ZITADEL_DATABASE_POSTGRES_HOST: db
      ZITADEL_DATABASE_POSTGRES_PORT: "5432"
      ZITADEL_DATABASE_POSTGRES_DATABASE: zitadel
      ZITADEL_DATABASE_POSTGRES_SSL_MODE: disable
      ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME: postgres
      ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD: postgres
      ZITADEL_DATABASE_POSTGRES_USER_USERNAME: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_PASSWORD: zitadel

      # External domain (required for localhost access)
      ZITADEL_EXTERNALDOMAIN: localhost
      ZITADEL_EXTERNALPORT: 8080
      ZITADEL_EXTERNALSECURE: "false"

      # First instance admin user (required) (username:zitadel-admin@zitadel.localhost)
      ZITADEL_FIRSTINSTANCE_ORG_HUMAN_USERNAME: zitadel-admin
      ZITADEL_FIRSTINSTANCE_ORG_HUMAN_PASSWORD: Password1!

      # Disable Login V2 (required - V2 doesn't work properly yet)
      ZITADEL_DEFAULTINSTANCE_FEATURES_LOGINV2_REQUIRED: "false"
    command: >
      start-from-init
      --masterkey pBRR59cb3chEqftV467Ph3abokMn3pUK
      --tlsMode disabled
    ports:
      - "8080:8080"   # http://localhost:8080
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/debug/healthz"]
      interval: 5s
      timeout: 3s
      retries: 60
    restart: unless-stopped

volumes:
  dbdata:
